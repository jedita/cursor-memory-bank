---
description: Process map for VAN QA minimal build test
globs: van-qa-checks/build-test.mdc
alwaysApply: false
---
# VAN QA: MINIMAL IMPLEMENT TEST

> **TL;DR:** This component performs a minimal build test to ensure core build functionality works properly.

## 4Ô∏è‚É£ MINIMAL IMPLEMENT TEST PROCESS

```mermaid
graph TD
    Start["Minimal Build Test"] --> CreateTest["Create Minimal<br>Test Project"]
    CreateTest --> BuildTest["Attempt<br>Build"]
    BuildTest --> BuildStatus{"Build<br>Successful?"}
    
    BuildStatus -->|"Yes"| RunTest["Run Basic<br>Functionality Test"]
    BuildStatus -->|"No"| FixBuild["Fix Build<br>Issues"]
    FixBuild --> RetryBuild["Retry Build"]
    RetryBuild --> BuildStatus
    
    RunTest --> TestStatus{"Test<br>Passed?"}
    TestStatus -->|"Yes"| TestSuccess["Minimal Build Test<br>‚úÖ PASS"]
    TestStatus -->|"No"| FixTest["Fix Test<br>Issues"]
    FixTest --> RetryTest["Retry Test"]
    RetryTest --> TestStatus
    
    style Start fill:#4da6ff,stroke:#0066cc,color:white
    style TestSuccess fill:#10b981,stroke:#059669,color:white
    style BuildStatus fill:#f6546a,stroke:#c30052,color:white
    style TestStatus fill:#f6546a,stroke:#c30052,color:white
```

### Minimal Build Test Implementation:
```powershell
# Example: Perform minimal build test for a React project
function Perform-MinimalBuildTest {
    $buildSuccess = $false
    $testSuccess = $false
    
    # Create minimal test project using FileSystem MCP
    $testDir = ".__build_test"
    
    try {
        # Remove existing test directory if it exists (using MCP)
        try {
            mcp_filesystem_get_file_info -path $testDir | Out-Null
            # Directory exists, remove it (Note: MCP doesn't have recursive delete, handle carefully)
            Write-Output "‚ö†Ô∏è Test directory exists, manual cleanup required"
        } catch {
            # Directory doesn't exist, continue
        }
        
        # Create minimal test directory using MCP
        mcp_filesystem_create_directory -path $testDir
        Push-Location $testDir
        
        # Initialize minimal package.json using MCP
        $packageJsonContent = @"
{
  "name": "build-test",
  "version": "1.0.0",
  "description": "Minimal build test",
  "main": "index.js",
  "scripts": {
    "build": "echo Build test successful"
  }
}
"@
        mcp_filesystem_write_file -path "package.json" -content $packageJsonContent
        
        # Attempt build
        npm run build | Out-Null
        $buildSuccess = $true
        
        # Create minimal test file using MCP
        $indexJsContent = @"
console.log('Test successful');
"@
        mcp_filesystem_write_file -path "index.js" -content $indexJsContent
        
        # Run basic test
        node index.js | Out-Null
        $testSuccess = $true
        
    } catch {
        Write-Output "‚ùå Build test failed: $($_.Exception.Message)"
    } finally {
        Pop-Location
        # Cleanup using platform commands (MCP lacks recursive directory deletion)
        # Note: This is an acceptable use case for platform commands
        try { Remove-Item -Path $testDir -Recurse -Force -ErrorAction SilentlyContinue } catch {}
    }
    
    # Display results
    if ($buildSuccess -and $testSuccess) {
        Write-Output "‚úÖ Minimal build test passed successfully"
        return $true
    } else {
        if (-not $buildSuccess) {
            Write-Output "‚ùå Build process failed"
        }
        if (-not $testSuccess) {
            Write-Output "‚ùå Basic functionality test failed"
        }
        return $false
    }
}
```

## üìã MINIMAL IMPLEMENT TEST CHECKPOINT

```
‚úì CHECKPOINT: MINIMAL IMPLEMENT TEST
- Test project creation successful? [YES/NO]
- Build process completed successfully? [YES/NO]
- Basic functionality test passed? [YES/NO]

‚Üí If all YES: QA Validation complete, proceed to generate success report.
‚Üí If any NO: Fix build issues before continuing.
```

**Next Step (on PASS):** Load `van-qa-utils/reports.mdc` to generate success report.
**Next Step (on FAIL):** Check `van-qa-utils/common-fixes.mdc` for build test fixes. 